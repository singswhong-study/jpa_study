<관계 Mapping>

- JPA에서 연관관계는 영속객체(Entity)간의 관계
- 방향성을 가짐. 단방향, 양방향 등
- 관계의 다중성에 따라 1:1, 1:N, N:M
- Entity 간의 관계는 테이블간의 관계와 매핑됨.
- 영속객체와 테이블관계의 차이점을 이해해야한다.

* A라는 객체가 B라는 객체를 알고, B의 기능들을 사용할수 있게 된 상태 = A와 B의 연관관계가 구성되었다. 단방향.
* A도 B도 서로의 객체를 안다. = 양방향 => 되도록 이걸 사용하진 않는다.
    => 어떤 하나가 바뀌면서 어떤 사이드 이펙트가 발생할지에 대해서 충분한 고민이 필요함

- 테이블관계의 외래키 같은것 처럼, A객체에서 B객체를 가지고 있는 관계를 만들어야 한다.


***** 연관매핑은 진짜 필요할때만 사용. CQRS 를 참고해보자.
    - 객체 탐색이 쉽다는 이유로 사용 X
    - 특히 조회기능은 별도 모델로 구현.CQRS!!!!!
    - Embeddable 매핑이 가능하다면 사용할 것.


1) 참조키 1:1 단방향 매핑
    @OneToOne                       // onetoone 은 기본 fetch 가 eager 라서 left join 으로 들고온다. (fetch = FetchType.LAZY) 로 바꾸기도 가능
    @JoinColumn(name = "email")

2) 식별자 공유 1:1 단방향 매핑
    @OneToOne
    @PrimaryKeyJoinColumn(name = "userEmail")

3) N-1 단방향 연관 매핑                 // ManyToOne 은 기본 fetch 가 eager 라서 left join 으로 들고온다. (fetch = FetchType.LAZY) 로 바꾸기도 가능
    @ManyToOne
    @JoinColumn(name = "email")

4) 1-N 단방향 연관 매핑
    @OneToMany
    @JoinColumn(name = "email")